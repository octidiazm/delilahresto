swagger: "2.0"
info:
  description: "backend de una aplicacion de restaurantes"
  version: 2.0.0
  title: "delilah resto"
  contact:
    email: "octidiazm@hotmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1"
tags:
- name: "usuarios"
  description: "todo sobre las apis de usuarios"
- name: "productos"
  description: "todo sobre las apis de productos"
- name: "pedidos"
  description: "todo sobre las apis de pedidos"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /registro:
    post:
      tags:
      - "usuarios"
      summary: "crear un nuevo usuario"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "creacion de un nuevo usuario"
        required: true
        schema:
          $ref: "#/definitions/usuario"
      responses:
        "201":
          description: "contacto agregado a la base de datos"
          schema: 
            $ref: "#/definitions/usuarioRes"
  /login:
    post:
      tags:
      - "usuarios"
      summary: "inicio de sesion del usuario"
      produces:
      - "application/json"
      parameters:
      - name: "usuario"
        in: "body"
        description: "datos del usuario"
        required: true
        schema:
          $ref: "#/definitions/login"
      responses:
        "200":
          description: "inicio de sesion correcto"
          schema:
            $ref: "#/definitions/loginRes"
        "404":
          description: "el contacto no existe"
  /usuario:
    get:
      tags:
      - "usuarios"
      summary: "traida de todos los usuarios de la base de datos"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/usuario"
        "403":
          description: "si el token no es admin"
  /usuarios/{id}:
    get:
      tags:
      - "usuarios"
      summary: "traer un usuario segun el id"
      description: "retorna un solo usuario"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID del usuario que se desea"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/usuario"
        "400":
          description: "Invalid ID supplied"
        "403":
          description: "no autorizado"
  /productos:
    post:
      tags:
      - "productos"
      summary: "ingresar productos a la base de datos"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      - name: "producto"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/productos"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/resProducto"
    get:
      tags:
      - "productos"
      summary: " traer los productos"
      description: "Returns a map of status codes to quantities"
      operationId: "getInventory"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token del usuario"
      responses:
        "200":
          description: "successful operation"
          schema:
           $ref: "#/definitions/productos"
  /productos/{id}:
    put:
      tags:
      - "productos"
      summary: "editar un producto"
      description: "editar un producto en especial"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      - name: "id"
        in: "path"
        description: "ID del producto que desea editar"
        required: true
        type: "integer"
        format: "int64"
      - name: "producto"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/productos"
      responses:
        "200":
          description: "producto actualizado"
          schema:
            $ref: "#/definitions/actProducto"
        "400":
          description: "no existe un producto con ese id"
    delete:
      tags:
      - "productos"
      summary: "borrar un producto"
      description: "borrar un producto de la base de datos"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      - name: "id"
        in: "path"
        description: "id del producto que desea eliminar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "prducto eliminado con exito"
          schema:
            $ref: "#/definitions/delProducto"
        "400":
          description: "ocurrio un error con la peticicon"
        "404":
          description: " producto no encontrado en la base datos"
  /pedido:
    post:
      tags:
      - "pedidos"
      summary: "Creacion de un pedido"
      description: "crear pedidos con los productos deseados"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token del usuario"
      - in: "body"
        name: "body"
        description: "pedido que desea crear"
        required: true
        schema:
          $ref: "#/definitions/pedido"
      responses:
        "200":
          description: "producto agregado a la base de datos"
          schema:
            $ref: "#/definitions/resPedido"
  /pedido/{id}:
    put:
      tags:
      - "pedidos"
      summary: "actualizacion del pedido"
      description: "actualizando un pedido por el admin"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      - in: "path"
        name: "id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/pedido"
      responses:
        "200":
          description: "pedido actualizado con exito"
    delete: 
      tags: 
      - "pedidos"
      summary: "actualizacion del pedido"
      description: "actualizando un pedido por el admin"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "header"
        required: true
        type: string
        description: "el token de admin"
      - in: "path"
        name: "id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "pedido eliminado con exito"
      
  /pedido/estado/{id}:
    put:
      tags:
      - "pedidos"
      summary: "Actualizacion del estado de un producto"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "nuevo estado id"
        description: "nuevo estado del pedido"
        required: true
        schema:
          $ref: "#/definitions/pedido-estado"
      responses:
        default:
          description: "successful operation"
definitions:

  pedido-estado:
    type: "object"
    properties:
      id_nuevo_estado:
        type: "integer"
        example: 3
  resProducto:
    type: "object"
    properties:
      status:
        type: "string"
        example: "ok"
      mensaje: 
        type: "string"
        example: "producto insertado en la base de datos"
      
  actProducto:
    type: "object"
    properties:
      status:
        type : "string"
        example: "ok"
      mensaje: 
        type: "string"
        example: "el producto ha sido modificado con exito"
  delProducto:
    type: "object"
    properties:
      mensaje:
        type: "string"
        example: "producto eliminado con exito"
  productos:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 3
      item:
        type: "string"
        example: "Hamburguesa La Burgesa"
      rutaFoto:
        type: "string"
        example: "https://images.clarin.com/2021/06/17/LC25eDtCT_1200x630__1.jpg"
      descripcion:
        type: "string"
        example: "Hamburguesa completa con lechuga, tomate, mayonesa , cebolla ,huevo y papas fritas"
      precio:
        type: "integer"
        format: "int64"
        example: 500
  loginRes:
    type: "object"
    properties:
      status:
        type: "string"
        example: "ok"
      mensaje:
        type: "string"
        example: "sesion iniciada"
      token:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoianVhbmVzaXRveCIsInBhc3N3b3JkIjoiMTIzNCIsImlhdCI6MTYyMDU3MzExNH0.6TKWIroCdmY81fA199ZC9x8FLOnfjgaNziH42UCSgqA"
  login:
    type: "object"
    properties:
      usuario:
        type: "string"
        example: "octidiaz123"
      contrase√±a:
        type: "string"
        example: "octi1234"
  usuarioRes:
    type: "object"
    properties:
      status:
        type: "string"
        example: "ok"
      mensaje:
        type: "string"
        example: "contacto agregado"
  usuario:
    type: "object"
    properties:
      usuario:
        type: "string"
        example: "octidiazm"
      nombre:
        type: "string"
        example: "octavio"
      apellido:
        type: "string"
        example: "diaz"
      email:
        type: "string"
        example: "cabezask8diaz@hotmail.com"
      telefono:
        type: "integer"
        format: "int64"
      direccion:
        type: "string"
        example: "lino spilimbergo 47"
      password:
        type: "string"
        example: "1234"
  pedido:
    type: "object"
    properties:
      id_usuario:
        type: "integer"
        format: "int64"
      id_productos:
        type: "array"
        items:
          type: "integer"
          format: "int64"
          example: 1,2,3
  resPedido:
    type: "object"
    properties:
      status:
        type: "string"
        example: "ok"
      mensaje:
        type: "string"
        example: "pedido creado con exito"